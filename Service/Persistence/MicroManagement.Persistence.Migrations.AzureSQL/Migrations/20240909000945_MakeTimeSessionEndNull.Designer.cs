// <auto-generated />
using System;
using MicroManagement.Persistence.EF.Configuration;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace MicroManagement.Persistence.Migrations.AzureSQL.Migrations
{
    [DbContext(typeof(MyMicroManagementDbContext))]
    [Migration("20240909000945_MakeTimeSessionEndNull")]
    partial class MakeTimeSessionEndNull
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("MicroManagement.Persistence.EF.Entities.ProjectEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Color")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("ProjectsTable");
                });

            modelBuilder.Entity("MicroManagement.Persistence.EF.Entities.TimeSessionEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("TimeSessionsTable");
                });

            modelBuilder.Entity("ProjectEntityTimeSessionEntity", b =>
                {
                    b.Property<Guid>("ProjectsId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("TimeSessionsId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ProjectsId", "TimeSessionsId");

                    b.HasIndex("TimeSessionsId");

                    b.ToTable("ProjectEntityTimeSessionEntity");
                });

            modelBuilder.Entity("ProjectEntityTimeSessionEntity", b =>
                {
                    b.HasOne("MicroManagement.Persistence.EF.Entities.ProjectEntity", null)
                        .WithMany()
                        .HasForeignKey("ProjectsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MicroManagement.Persistence.EF.Entities.TimeSessionEntity", null)
                        .WithMany()
                        .HasForeignKey("TimeSessionsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
